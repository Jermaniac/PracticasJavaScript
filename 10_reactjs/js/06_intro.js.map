{"version":3,"sources":["../jsx/06_intro.jsx"],"names":["VisorClientes","TablaClientes","props","state","items","fetch","then","respuesta","ok","console","log","json","resp","setState","estado","status","texto","statusText","catch","razon","alert","JSON","stringify","React","Component","ReactDOM","render","document","querySelector"],"mappings":";;;;;;;;;;AACA,SAAQA,aAAR,QAA4B,oBAA5B;;IAEMC,a;;;AAEF,2BAAYC,KAAZ,EAAmB;AAAA;;AAGf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAXe,kIACTA,KADS;;AAYf,cAAKC,KAAL,GAAa;AACTC,mBAAQ;AADC,SAAb;AAZe;AAelB;;;;4CAEmB;AAAA;;AAChB;AACAC,kBAAM,gCAAN,EACKC,IADL,CAEQ,UAACC,SAAD,EAAc;AACV,oBAAIA,UAAUC,EAAd,EAAiB;AACbC,4BAAQC,GAAR,CAAY,sBAAZ;AACAH,8BAAUI,IAAV,GACCL,IADD,CAEA,UAACM,IAAD,EAAU;AACN,+BAAKC,QAAL,CAAc;AACVT,mCAAQQ;AACR;AACA;AAHU,yBAAd;AAKH,qBARD;AAWH,iBAbD,MAcI;AACAH,4BAAQC,GAAR,CAAY,0BAAZ;AACAD,4BAAQC,GAAR,CACQ;AACII,gCAAQP,UAAUQ,MADtB;AAEIC,+BAAOT,UAAUU;AAFrB,qBADR;AAOH;AACA,aA3Bb,EA6BKC,KA7BL;AA8BQ;AACA,sBAACC,KAAD,EAAW;AACPC,mEAAiDC,KAAKC,SAAL,CAAeH,KAAf,CAAjD;AACH,aAjCT;AAmCH;;;iCACQ;AACL,mBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,oCAAC,aAAD,IAAe,UAAU,KAAKhB,KAAL,CAAWC,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,aADJ;AAKH;;;;EA/DuBmB,MAAMC,S;;AAkElCC,SAASC,MAAT,CACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEIC,SAASC,aAAT,CAAuB,gBAAvB,CAFJ","file":"06_intro.js","sourcesContent":["\nimport {VisorClientes} from \"./visorclientes.js\"\n\nclass TablaClientes extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        // this.clientes = [];\n\n        // this.state = {\n        //     nombre: \"German\",\n        //     apellidos: \"\",\n        //     comentarios: \"\",\n        //     provincia : \"\",\n        //     errorEnNombre: false\n        // }\n        this.state = {\n            items : []\n        };\n    }\n\n    componentDidMount() {\n        // Devuelve una promesa\n        fetch(\"http://localhost:3000/clientes\")\n            .then(\n                (respuesta) =>{\n                    if (respuesta.ok){\n                        console.log(\"Invocacion correcta.\")\n                        respuesta.json()\n                        .then(\n                        (resp) => {\n                            this.setState({\n                                items : resp\n                                // Esto seria necesario en caso de que lo hubiera puesto fuera del state\n                                // this.forceUpdate\n                            })\n                        } \n                        )\n\n                    }\n                    else{\n                        console.log(\"Invocacion con error ...\")\n                        console.log(\n                                {\n                                    estado: respuesta.status,\n                                    texto: respuesta.statusText\n                                }\n                        )\n\n                    }\n                    }\n            )\n            .catch(\n                // Si no se puede realizar invocacion\n                (razon) => {\n                    alert(`Error al intentar invocacion por AJAX.\\n${JSON.stringify(razon)}`);\n                }\n            )\n    }\n    render() {\n        return (\n            <div>\n                <VisorClientes clientes={this.state.items}/>\n            </div>\n        );\n    }\n}\n\nReactDOM.render(\n    <TablaClientes />,\n    document.querySelector(\"div#contenedor\")\n);"]}
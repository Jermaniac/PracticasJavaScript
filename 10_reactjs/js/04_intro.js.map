{"version":3,"sources":["../jsx/04_intro.jsx"],"names":["Formulario","props","leerCampo","ev","target","name","setState","errorEnNombre","test","value","verEstado","console","log","state","enviar","fetch","method","body","JSON","stringify","headers","then","respuesta","ok","estado","status","texto","statusText","catch","razon","nombre","apellidos","comentarios","provincia","React","Component","ReactDOM","render","document","querySelector"],"mappings":";;;;;;;;;;;;IACMA,U;;;AACF,wBAAYC,KAAZ,EAAkB;AAAA;;AAAA,4HACRA,KADQ;;AAAA,cAYlBC,SAZkB,GAYN,UAACC,EAAD,EAAQ;;AAEhB,oBAAQA,GAAGC,MAAH,CAAUC,IAAlB;AACI,qBAAK,QAAL;AACI,0BAAKC,QAAL,CACI;AACIC,uCAAgB,CAAC,mBAAmBC,IAAnB,CAAwBL,GAAGC,MAAH,CAAUK,KAAlC;AADrB,qBADJ;AAKA;;AAEJ;AACI;AAVR;AAYA,kBAAKH,QAAL,qBAGSH,GAAGC,MAAH,CAAUC,IAHnB,EAG0BF,GAAGC,MAAH,CAAUK,KAHpC;AAOH,SAjCiB;;AAAA,cAkClBC,SAlCkB,GAkCN,UAACP,EAAD,EAAQ;AAChBQ,oBAAQC,GAAR,CAAY,MAAKC,KAAjB;AACH,SApCiB;;AAAA,cAuClBC,MAvCkB,GAuCT,UAACX,EAAD,EAAQ;AACb;AACA;AACAY,kBACI,gCADJ,EAEI;AACI;AACAC,wBAAS,MAFb;AAGIC,sBAAOC,KAAKC,SAAL,CAAe,MAAKN,KAApB,CAHX;AAIIO,yBAAU;AACN,oCAAiB;AADX;AAJd,aAFJ,EAUEC,IAVF;AAWI;AACA,sBAACC,SAAD,EAAe;AACX;AACA,oBAAGA,UAAUC,EAAb,EAAgB;AACZZ,4BAAQC,GAAR,CAAY,qBAAZ;AACH,iBAFD,MAGI;AACAD,4BAAQC,GAAR,CAAY,0BAAZ;AACAD,4BAAQC,GAAR,CACI;AACIY,gCAASF,UAAUG,MADvB;AAEIC,+BAAQJ,UAAUK;AAFtB,qBADJ;AAMH;AACJ,aA1BL,EA4BCC,KA5BD;AA6BI;AACA,sBAACC,KAAD,EAAW;AACPlB,wBAAQC,GAAR,CAAY,8CAAZ;AACH,aAhCL;AAkCH,SA5EiB;;AAGd,cAAKC,KAAL,GAAW;AACPiB,oBAAQ,QADD;AAEPC,uBAAY,UAFL;AAGPC,yBAAa,uBAHN;AAIPC,uBAAW,QAJJ;AAKP1B,2BAAe;AALR,SAAX;AAHc;AAUjB;;AA4BD;;;;;iCAuCQ;AACJ;AACA,mBACI;AAAA;AAAA,kBAAK,WAAU,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ;AAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACI;AAAA;AAAA,0BAAK,WAAU,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACI;AAAA;AAAA,8BAAO,SAAQ,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ;AAEI,uDAAO,WAAU,cAAjB,EAAgC,MAAK,MAArC,EAA4C,MAAK,QAAjD,EAA0D,IAAG,QAA7D;AACI,mCAAO,KAAKM,KAAL,CAAWiB,MADtB;AAEI,sCAAU,KAAK5B,SAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAOQ,6BAAKW,KAAL,CAAWN,aAAX,IAA4B;AAAA;AAAA,8BAAK,WAAU,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPpC,qBADJ;AAWI;AAAA;AAAA,0BAAK,WAAU,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACI;AAAA;AAAA,8BAAO,SAAQ,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ;AAEI,uDAAO,WAAU,cAAjB,EAAgC,MAAK,MAArC,EAA4C,MAAK,WAAjD,EAA6D,IAAG,WAAhE;AACI,mCAAO,KAAKM,KAAL,CAAWkB,SADtB;AAEI,sCAAU,KAAK7B,SAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ,qBAXJ;AAkBI;AAAA;AAAA,0BAAK,WAAU,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACI;AAAA;AAAA,8BAAO,SAAQ,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ;AAEI,0DAAU,WAAU,cAApB,EAAmC,MAAK,aAAxC,EAAsD,IAAG,aAAzD;AACI,mCAAO,KAAKW,KAAL,CAAWmB,WADtB;AAEI,sCAAU,KAAK9B,SAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ,qBAlBJ;AAyBI;AAAA;AAAA,0BAAK,WAAU,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACI;AAAA;AAAA,8BAAO,SAAQ,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ;AAEI;AAAA;AAAA,8BAAQ,WAAU,cAAlB,EAAiC,MAAK,MAAtC,EAA6C,MAAK,WAAlD,EAA8D,IAAG,WAAjE;AACI,uCAAO,KAAKW,KAAL,CAAWoB,SADtB;AAEI,0CAAU,KAAK/B,SAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAII;AAAA;AAAA,kCAAQ,OAAM,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAJJ;AAKI;AAAA;AAAA,kCAAQ,OAAM,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BALJ;AAMI;AAAA;AAAA,kCAAQ,OAAM,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BANJ;AAOI;AAAA;AAAA,kCAAQ,OAAM,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAPJ;AAQI;AAAA;AAAA,kCAAQ,OAAM,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BARJ;AASI;AAAA;AAAA,kCAAQ,OAAM,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BATJ;AAUI;AAAA;AAAA,kCAAQ,OAAM,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAVJ;AAWI;AAAA;AAAA,kCAAQ,OAAM,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXJ;AAFJ,qBAzBJ;AAyCI;AAAA;AAAA,0BAAK,WAAU,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACI;AAAA;AAAA,8BAAQ,MAAK,QAAb,EAAsB,SAAS,KAAKY,MAApC,EAA4C,WAAU,iBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAzCJ;AAFJ,aADJ;AAkDH;;;;EAlIoBoB,MAAMC,S;;AAqI/BC,SAASC,MAAT,CACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEIC,SAASC,aAAT,CAAuB,gBAAvB,CAFJ","file":"04_intro.js","sourcesContent":["\nclass Formulario extends React.Component {\n    constructor(props){\n        super(props);\n\n        this.state={\n            nombre: \"German\",\n            apellidos : \"Gonzalez\",\n            comentarios: \"Esto es un comentario\",\n            provincia: \"Roshar\",\n            errorEnNombre: false\n        };\n    }\n\n    leerCampo = (ev) => {\n\n        switch (ev.target.name) {\n            case \"nombre\":\n                this.setState(\n                    {\n                        errorEnNombre : !/^[a-zA-Z]{3,20}$/.test(ev.target.value)\n                    }\n                )\n                break;\n        \n            default:\n                break;\n        }\n        this.setState(\n            {\n                // esta es una forma de leer todos los campos que vengan con una sola linea de codigo\n                [ev.target.name]: ev.target.value\n            }\n        );\n\n    };\n    verEstado = (ev) => {\n        console.log(this.state);\n    };\n\n    // Llamar a una url de un servidor: API Fetch\n    enviar = (ev) => {\n        // fetch no devuelve nada de forma directa, por defecto la invocacion es ASINCRONA\n        // Devuelve una promesa\n        fetch(\n            \"http://localhost:3000/clientes\",\n            {\n                // NO hace falta ponerlo, por defecto es GET\n                method : \"POST\",\n                body : JSON.stringify(this.state),\n                headers : {\n                    \"Content-type\" : \"application/json\"\n                }\n            }\n        ).then(\n            // Procesamos la respuesta si no hay error\n            (respuesta) => {\n                // Comprobamos si la invocacion (en capa de transporte) es correcta y procesada [200]\n                if(respuesta.ok){\n                    console.log(\"Invocacion correcta\");\n                }\n                else{\n                    console.log(\"Invocacion con error ...\")\n                    console.log(\n                        {\n                            estado : respuesta.status,\n                            texto : respuesta.statusText\n                        }\n                    )\n                }\n            }\n        )\n        .catch(\n            // Si no se puede realizar invocacion\n            (razon) => {\n                console.log(\"Error al intentar invocacion por AJAX: catch\");\n            }\n        )\n    }\n    render(){\n        // Para que no se recargue la pagina ponemos al boton el type button\n        return(\n            <div className=\"jumbotron\">\n                <h1>Formulario React</h1>\n                <form>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"nombre\">Nombre</label>\n                        <input className=\"form-control\" type=\"text\" name=\"nombre\" id=\"nombre\"\n                            value={this.state.nombre} \n                            onChange={this.leerCampo}\n                        />\n                        {\n                            this.state.errorEnNombre && <div className=\"alert alert-danger\">Nombre incorrecto</div>\n                        }\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"apellidos\">Apellidos</label>\n                        <input className=\"form-control\" type=\"text\" name=\"apellidos\" id=\"apellidos\"\n                            value={this.state.apellidos} \n                            onChange={this.leerCampo}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"comentarios\">Comentarios</label>\n                        <textarea className=\"form-control\" name=\"comentarios\" id=\"comentarios\"\n                            value={this.state.comentarios} \n                            onChange={this.leerCampo}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"provincia\">Provincia</label>\n                        <select className=\"form-control\" type=\"text\" name=\"provincia\" id=\"provincia\"\n                            value={this.state.provincia} \n                            onChange={this.leerCampo}\n                        >\n                            <option value=\"01\">Provincia 01</option>\n                            <option value=\"02\">Provincia 02</option>\n                            <option value=\"03\">Provincia 03</option>\n                            <option value=\"04\">Provincia 04</option>\n                            <option value=\"05\">Provincia 05</option>\n                            <option value=\"06\">Provincia 06</option>\n                            <option value=\"07\">Provincia 07</option>\n                            <option value=\"08\">Provincia 08</option>\n                        </select>\n                    </div>\n                    <div className=\"form-group\">\n                        <button type=\"button\" onClick={this.enviar} className=\"btn btn-primary\">Enviar</button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nReactDOM.render(\n    <Formulario/>,\n    document.querySelector(\"div#contenedor\")\n);"]}